---
import MergedResultsNotice from "../components/Rankings/MergedResultsNotice.astro";
import NoLinksFound from "../components/Rankings/NoLinksFound.astro";
import TopCats from "../components/Rankings/TopCats.astro";
import ScrollUp from "../components/ScrollUp.astro";
import SearchFilters from "../components/SearchFilters/Filters";
import LocalStorageLoader from "../components/SearchFilters/LocalStorageLoader.astro";
import { CATS_ENDPOINT } from "../constants";
import BaseLayout from "../layouts/BaseLayout.astro";
import { has_merged_cats_property, Periods, type CatCount, type MorePageCatCountsWithMergedCats, type Period } from "../types";
import fetch_with_handle_redirect from "../util/fetch_with_handle_redirect";

let more_cats_url = CATS_ENDPOINT + "?more=true"

// Params
let cats = ""
let url_contains = ""
let period: Period = 'all'

if (Astro.url.searchParams.get('cats')) {
	cats = Astro.url.searchParams.get('cats') as string
	more_cats_url += `&cats=${cats}`
}
if (Astro.url.searchParams.get('url_contains')) {
	url_contains = Astro.url.searchParams.get('url_contains') as string
	more_cats_url += `&url_contains=${url_contains}`
}
if (
	Astro.url.searchParams.get('period') &&
	(Periods as readonly string[]).includes(
		Astro.url.searchParams.get('period') as Period
	)
) {
	period = Astro.url.searchParams.get('period') as Period
	more_cats_url += `&period=${period}`
}

// Cat counts
const counts_resp = await fetch_with_handle_redirect(more_cats_url)
if (!counts_resp.Response || counts_resp.RedirectTo) {
	return Astro.redirect(counts_resp.RedirectTo)
}
const counts: MorePageCatCountsWithMergedCats | CatCount[] = await counts_resp.Response.json()
let top_cats: CatCount[] = []
let merged_cats: string[] | undefined = undefined
if (has_merged_cats_property(counts)) {
	top_cats = counts.Counts
	merged_cats = counts.MergedCats
} else {
	top_cats = counts
}

---

<BaseLayout Title="More">
	<LocalStorageLoader />
    <main>
		<SearchFilters 
			client:load 
			InitialCats={cats.length ? cats.split(',') : []}
			InitialPeriod={period}
			InitialURLContains={url_contains}
			Endpoint="/more"
		/>

        {top_cats?.length ? <section>
			{merged_cats && merged_cats.length ? (
				<MergedResultsNotice MergedCats={merged_cats} />
			) : null}
           <TopCats 
				TopCats={top_cats}
				CatsParams={cats}
				PeriodParams={period}
				More
		   />
        </section> : cats ? <p>No further subcats.</p> : <NoLinksFound />}
        <ScrollUp />
    </main>
</BaseLayout>