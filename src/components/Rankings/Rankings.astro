---
import type { CatCount, Contributor, Link, Period, SortMetric } from "../../types";
import ScrollUp from "../ScrollUp.astro";
import MergedResultsNotice from "./MergedResultsNotice.astro";
import TopCats from "./TopCats.astro";
import TopContributors from "./TopContributors.astro";
import TopLinks from "./TopLinks.astro";

interface Props {
    Links: Link[]
    NSFWParams?: boolean
    CatsParams?: string
    MergedCats?: string[]
    PeriodParams?: Period
    SortByParams?: SortMetric
    PageParams?: number
    PageCount?: number
    TopCats: CatCount[]
    TopContributors?: Contributor[]
    Token?: string
    User?: string
    IsHomePage?: boolean
}

const { Links: links, NSFWParams: nsfw_params, CatsParams: cats_params, MergedCats: merged_cats, PeriodParams: period_params, SortByParams: sort_by_params, PageParams: page, PageCount: page_count, TopCats: top_cats, TopContributors: top_contributors, Token: token, User: user, IsHomePage: is_home_page  } = Astro.props

const home_page_non_default_periods = ['day', 'week', 'year','all']
---

<div id="rankings" class={is_home_page ? 'home' : ''}>
    {merged_cats && merged_cats.length ? (
        <MergedResultsNotice MergedCats={merged_cats} />
    ) : null}

    <aside id="top-cats-and-contributors">
        <TopCats TopCats={top_cats} CatsParams={cats_params} Period={period_params} SortBy={sort_by_params} NSFW={nsfw_params} />
        <TopContributors Contributors={top_contributors} />
    </aside>

    <section>
        {is_home_page ? <ul id='change-period'>
            <li>
                <h2>Top Links (month):</h2>
            </li>
            {
                home_page_non_default_periods.map((period) => (
                    <li class='period'>
                        <a href={`/search?period=${period}`}>{period}</a>
                    </li>
                ))
            }
        </ul> : <h2>Top Links</h2>}

        {links?.length ? <TopLinks 
            Links={links}
            NSFW={nsfw_params}
            Cats={cats_params}
            Period={period_params}
            SortBy={sort_by_params}
            Page={page}
            PageCount={page_count}
            Token={token}
            User={user}
        /> : <p>None :(</p>}
    </section>

    {links?.length > 5 
        ? <ScrollUp /> 
        : null
    }
</div>

<style>
    #rankings {
		display: flex;
		flex-direction: column;
        max-width: fit-content;

        aside#top-cats-and-contributors {
			display: flex;
			flex-direction: column;
			justify-content: space-evenly;
			gap: 1rem;
			min-width: fit-content;
			padding: 0.5rem 0;

			> div {
				border-bottom: 1px solid rgba(255, 255, 255, 0.05);
				padding-bottom: 1rem;
			}
		}

        section:has(ul#change-period) {
            max-width: 800px;
            padding-top: 1rem;
        }

        ul#change-period {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            list-style: none;
            padding-inline-start: 0;
            padding-bottom: 0.5rem;
            margin: 0;
            margin-bottom: 1rem;
            font-weight: bold;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);

            li:nth-of-type(2) {
                margin-left: 0.5rem;
            }

            li.period {
                margin-right: 0.5rem;
            }

            li.period:last-of-type {
                margin-right: 0;
            }
        }

        /* had to put this here to increase specificity */
        @media (min-width: 450px) {
            aside#top-cats-and-contributors {
                flex-direction: row;
            }
        }
	}

    #rankings.home {
        margin-top: 2rem;
    }

    #rankings:has(p#no-further-cats) {
		padding: 0.5rem 0;
	}

    @media (min-width: 680px) {
        #rankings {
            flex-direction: row;
            justify-content: space-between;
            gap: 6rem;

            aside#top-cats-and-contributors {
                flex-direction: column;
                justify-content: start;
                position: sticky;
                top: 1rem;
                height: min-content;
            }
        }
    }
</style>